<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <title>Login / Register - SSO :: SWCS DEMO</title>
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
        <style type="text/css">
            body {
                padding-top: 50px;
            }
            .panel-login {
                border-color: #ccc;
                -webkit-box-shadow: 0px 2px 3px 0px rgba(0,0,0,0.2);
                -moz-box-shadow: 0px 2px 3px 0px rgba(0,0,0,0.2);
                box-shadow: 0px 2px 3px 0px rgba(0,0,0,0.2);
            }
            .panel-login > .panel-heading {
                color: #00415d;
                background-color: #fff;
                border-color: #fff;
                text-align: center;
            }
            .panel-login > .panel-heading a {
                text-decoration: none;
                color: #666;
                font-weight: bold;
                font-size: 15px;
                -webkit-transition: all 0.1s linear;
                -moz-transition: all 0.1s linear;
                transition: all 0.1s linear;
            }
            .panel-login > .panel-heading a.active {
                background-color: #029f5b;
                color: #fff;
                font-size: 20px;
                padding: 5px;
                -ms-filter: "progid:DXImageTransform.Microsoft.Shadow(Strength=3, Direction=135, Color=#333333)";/*IE 8*/
                -moz-box-shadow: 3px 3px 3px #333333;/*FF 3.5+*/
                -webkit-box-shadow: 3px 3px 3px #333333;/*Saf3-4, Chrome, iOS 4.0.2-4.2, Android 2.3+*/
                box-shadow: 3px 3px 3px #333333;/* FF3.5+, Opera 9+, Saf1+, Chrome, IE10 */
                filter: progid:DXImageTransform.Microsoft.Shadow(Strength=3, Direction=135, Color=#333333); /*IE 5.5-7*/
                border: 1px solid #000000;
                -moz-border-radius: 10px;/*Firefox*/
                -webkit-border-radius: 10px;/*Safari, Chrome*/
                border-radius: 10px;
            }
            .panel-login > .panel-heading hr {
                margin-top: 10px;
                margin-bottom: 0px;
                clear: both;
                border: 0;
                height: 1px;
                background-image: -webkit-linear-gradient(left,rgba(0, 0, 0, 0),rgba(0, 0, 0, 0.15),rgba(0, 0, 0, 0));
                background-image: -moz-linear-gradient(left,rgba(0,0,0,0),rgba(0,0,0,0.15),rgba(0,0,0,0));
                background-image: -ms-linear-gradient(left,rgba(0,0,0,0),rgba(0,0,0,0.15),rgba(0,0,0,0));
                background-image: -o-linear-gradient(left,rgba(0,0,0,0),rgba(0,0,0,0.15),rgba(0,0,0,0));
            }
            .panel-login input[type="text"], .panel-login input[type="email"], .panel-login input[type="password"] {
                height: 45px;
                border: 1px solid #ddd;
                font-size: 16px;
                -webkit-transition: all 0.1s linear;
                -moz-transition: all 0.1s linear;
                transition: all 0.1s linear;
            }
            .panel-login input:hover, .panel-login input:focus {
                outline: none;
                -webkit-box-shadow: none;
                -moz-box-shadow: none;
                box-shadow: none;
                border-color: #ccc;
            }
            .btn-login {
                background-color: #59B2E0;
                outline: none;
                color: #fff;
                font-size: 14px;
                height: auto;
                font-weight: normal;
                padding: 14px 0;
                text-transform: uppercase;
                border-color: #59B2E6;
            }
            .btn-login:hover, .btn-login:focus {
                color: #fff;
                background-color: #53A3CD;
                border-color: #53A3CD;
            }
            .forgot-password {
                text-decoration: underline;
                color: #888;
            }
            .forgot-password:hover, .forgot-password:focus {
                text-decoration: underline;
                color: #666;
            }

            .btn-register {
                background-color: #1CB94E;
                outline: none;
                color: #fff;
                font-size: 14px;
                height: auto;
                font-weight: normal;
                padding: 14px 0;
                text-transform: uppercase;
                border-color: #1CB94A;
            }
            .btn-register:hover, .btn-register:focus {
                color: #fff;
                background-color: #1CA347;
                border-color: #1CA347;
            }
            fieldset legend{
                background: -moz-linear-gradient(270deg, #c7c7c7 0%, #373737 100%);/* FF3.6+ */
                background: -webkit-gradient(linear, 270deg, color-stop(0%, #c7c7c7), color-stop(100%, #373737));/* Chrome,Safari4+ */
                background: -webkit-linear-gradient(270deg, #c7c7c7 0%, #373737 100%);/* Chrome10+,Safari5.1+ */
                background: -o-linear-gradient(270deg, #c7c7c7 0%, #373737 100%);/* Opera 11.10+ */
                background: -ms-linear-gradient(270deg, #c7c7c7 0%, #373737 100%);/* IE10+ */
                filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#c7c7c7', endColorstr='#373737', GradientType='1'); /* for IE */
                background: linear-gradient(180deg, #c7c7c7 0%, #373737 100%);/* W3C */
                color:#fff;
                font-weight:bold;
            }
        </style>
        <script src="//code.jquery.com/jquery-1.10.2.min.js"></script>
        <script src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/js/bootstrap.min.js"></script>
        <script type="text/javascript">
            window.alert = function () {
            };
            var defaultCSS = document.getElementById('bootstrap-css');
            function changeCSS(css) {
                if (css)
                    $('head > link').filter(':first').replaceWith('<link rel="stylesheet" href="' + css + '" type="text/css" />');
                else
                    $('head > link').filter(':first').replaceWith(defaultCSS);
            }


            $(document).ready(function () {
                var iframe_height = parseInt($('html').height());
                window.parent.postMessage(iframe_height, 'http://bootsnipp.com');
            });
        </script>
        <script type="text/javascript">
            $(function () {

                $('#login-form-link').click(function (e) {
                    $("#login-form").delay(100).fadeIn(100);
                    $("#register-form").fadeOut(100);
                    $('#register-form-link').removeClass('active');
                    $(this).addClass('active');
                    e.preventDefault();
                });
                $('#register-form-link').click(function (e) {
                    $("#register-form").delay(100).fadeIn(100);
                    $("#login-form").fadeOut(100);
                    $('#login-form-link').removeClass('active');
                    $(this).addClass('active');
                    e.preventDefault();
                });

            });

        </script>
    </head>
    <body>
        <div class="container">
            <div class="row">
                <div class="col-md-8 col-md-offset-2">
                    <div class="panel panel-login">
                        <div class="panel-heading">
                            <div class="row">
                                <div class="col-xs-6 col-sm-4"></div>
                                <div class="col-xs-6 col-sm-4">
                                    <?php
                                    foreach (Yii::app()->user->getFlashes() as $key => $message) {
                                        echo '<font color="red"><div class="alert-message error"><p>' . $message . "</font></p></div>\n";
                                    }
                                    ?>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-6">
                                    <a href="#" class="active" id="login-form-link">Login</a>
                                </div>
                                <div class="col-xs-6">
                                    <a href="#" id="register-form-link">Register</a>
                                </div>
                            </div>
                            <hr>
                        </div>
                        <div class="panel-body">
                            <div class="row">
                                <div class="col-lg-12">
                                    <form id="login-form" action="<?= $this->createUrl('/signup') ?>" method="post" role="form" style="display: block;">

                                        <input type="hidden" name="CALL_BACK_URL" value="<?= $CALL_BACK_URL ?>" />

                                        <div class="form-group">
                                            <label for="exampleInputEmail1">IUID / Email-ID</label>
                                            <input type="text" required="required" name="username" class="form-control" id="exampleInputEmail1" placeholder="IUID / Email-ID">
                                        </div>
                                        <div class="form-group">
                                            <label for="exampleInputPassword1">Password</label>
                                            <input type="password" required="required" name="passwd" class="form-control" id="exampleInputPassword1" placeholder="Password">
                                        </div>

                                        <center>
                                            <input type="submit" name="login-submit" id="login-submit" tabindex="4" class="btn btn-info btn-block" value="Log In">
                                        </center>
                                        <input type="hidden" name="CALL_BACK_URL" value="<?= $CALL_BACK_URL ?>" />
                                        <input type="hidden" name="callback_failure_url" value="<?= $callback_failure_url ?>" />
                                        <input type="hidden" name="callback_success_url" value="<?= $callback_success_url ?>" />
                                    </form>
                                    <form action="<?= $this->createUrl('/signup') ?>" method="post" id="register-form" style="display: none;">

                                        <input type="hidden" name="CALL_BACK_URL" value="<?= $CALL_BACK_URL ?>" />
                                        <input type="hidden" name="CALLBACK_FAILURE_URL" value="<?= $CALL_BACK_URL ?>" />
                                        <input type="hidden" name="CALLBACK_SUCCESS_URL" value="<?= $CALL_BACK_URL ?>" />
                                        <fieldset>
                                            <legend>Entrepreneur Registration</legend>
                                            <div class="form-group">
                                                <label for="fname">First Name</label>
                                                <input type="text" required="required" id="fname" class="form-control" name="First Name" placeholder="First Name">
                                            </div>
                                            <div class="form-group">
                                                <label for="lname">Last Name</label>
                                                <input type="text" required="required" id="lname" class="form-control" name="Last Name" placeholder="Last Name">
                                            </div>

                                            <div class="form-group">
                                                <label for="pan">PAN Card No</label>
                                                <input type="text" id="pan" required="required" class="form-control" name="PAN" placeholder="PAN Card No">
                                            </div>
                                            <div class="form-group">
                                                <label for="uid">Adhaar No</label>
                                                <input type="text" id="uid" required="required" class="form-control" name="Adhaar" maxlength="12" placeholder="Adhaar No">
                                            </div>
                                        </fieldset>
                                        <fieldset>
                                            <legend>Contact Details</legend>
                                            <div class="form-group">
                                                <label for="addr">Address</label>
                                                <textarea name="address" type="text" id="addr" required="required" class="form-control"  placeholder="Address"></textarea>
                                            </div>

                                            <div class="form-group">
                                                <label>City Name</label>
                                                <input type="text" required="required" class="form-control" name="City" placeholder="City Name">
                                            </div>

                                            <div class="form-group">
                                                <label>District Name</label>
                                                <input type="text" required="required" class="form-control" name="District" placeholder="District Name">
                                            </div>


                                            <div class="form-group">
                                                <label>State Name</label>
                                                <input type="text" required="required" class="form-control" name="State" placeholder="State Name">
                                            </div>

                                            <div class="form-group">
                                                <label>Country Name</label>
                                                <input type="text" required="required" class="form-control" name="Country" placeholder="Country Name">
                                            </div>

                                            <div class="form-group">
                                                <label>PIN Code</label>
                                                <input type="text" required="required" class="form-control" name="PIN" placeholder="PIN Code">
                                            </div>

                                            <div class="form-group">
                                                <label>Mobile</label>
                                                <input type="text" required="required" class="form-control" name="mobile" placeholder="Mobile Number">
                                            </div>

                                            <div class="form-group">
                                                <label>E-mail</label>
                                                <input type="text" required="required" class="form-control" name="email" placeholder="E-mail Address">
                                            </div>
                                        </fieldset>
                                        <fieldset>
                                            <legend>Login Details</legend>
                                            <div class="form-group">
                                                <label>Password</label>
                                                <input type="text" required="required" class="form-control" name="password1" placeholder="Password">
                                            </div>
                                            <div class="form-group">
                                                <label>Confirm Password</label>
                                                <input type="text" required="required" class="form-control" name="password2" placeholder="Confirm Password">
                                            </div>

                                        </fieldset>
                                        <script type="text/javascript">
                                            var secret = "#_ZII_#";
                                            "use strict";
                                            var Aes = {};
                                            Aes.cipher = function (e, t) {
                                                var n = 4;
                                                var r = t.length / n - 1;
                                                var i = [[], [], [], []];
                                                for (var s = 0; s < 4 * n; s++)
                                                    i[s % 4][Math.floor(s / 4)] = e[s];
                                                i = Aes.addRoundKey(i, t, 0, n);
                                                for (var o = 1; o < r; o++) {
                                                    i = Aes.subBytes(i, n);
                                                    i = Aes.shiftRows(i, n);
                                                    i = Aes.mixColumns(i, n);
                                                    i = Aes.addRoundKey(i, t, o, n)
                                                }
                                                i = Aes.subBytes(i, n);
                                                i = Aes.shiftRows(i, n);
                                                i = Aes.addRoundKey(i, t, r, n);
                                                var u = new Array(4 * n);
                                                for (var s = 0; s < 4 * n; s++)
                                                    u[s] = i[s % 4][Math.floor(s / 4)];
                                                return u
                                            };
                                            Aes.keyExpansion = function (e) {
                                                var t = 4;
                                                var n = e.length / 4;
                                                var r = n + 6;
                                                var i = new Array(t * (r + 1));
                                                var s = new Array(4);
                                                for (var o = 0; o < n; o++) {
                                                    var u = [e[4 * o], e[4 * o + 1], e[4 * o + 2], e[4 * o + 3]];
                                                    i[o] = u
                                                }
                                                for (var o = n; o < t * (r + 1); o++) {
                                                    i[o] = new Array(4);
                                                    for (var a = 0; a < 4; a++)
                                                        s[a] = i[o - 1][a];
                                                    if (o % n == 0) {
                                                        s = Aes.subWord(Aes.rotWord(s));
                                                        for (var a = 0; a < 4; a++)
                                                            s[a] ^= Aes.rCon[o / n][a]
                                                    } else if (n > 6 && o % n == 4) {
                                                        s = Aes.subWord(s)
                                                    }
                                                    for (var a = 0; a < 4; a++)
                                                        i[o][a] = i[o - n][a] ^ s[a]
                                                }
                                                return i
                                            };
                                            Aes.subBytes = function (e, t) {
                                                for (var n = 0; n < 4; n++) {
                                                    for (var r = 0; r < t; r++)
                                                        e[n][r] = Aes.sBox[e[n][r]]
                                                }
                                                return e
                                            };
                                            Aes.shiftRows = function (e, t) {
                                                var n = new Array(4);
                                                for (var r = 1; r < 4; r++) {
                                                    for (var i = 0; i < 4; i++)
                                                        n[i] = e[r][(i + r) % t];
                                                    for (var i = 0; i < 4; i++)
                                                        e[r][i] = n[i]
                                                }
                                                return e
                                            };
                                            Aes.mixColumns = function (e, t) {
                                                for (var n = 0; n < 4; n++) {
                                                    var r = new Array(4);
                                                    var i = new Array(4);
                                                    for (var s = 0; s < 4; s++) {
                                                        r[s] = e[s][n];
                                                        i[s] = e[s][n] & 128 ? e[s][n] << 1 ^ 283 : e[s][n] << 1
                                                    }
                                                    e[0][n] = i[0] ^ r[1] ^ i[1] ^ r[2] ^ r[3];
                                                    e[1][n] = r[0] ^ i[1] ^ r[2] ^ i[2] ^ r[3];
                                                    e[2][n] = r[0] ^ r[1] ^ i[2] ^ r[3] ^ i[3];
                                                    e[3][n] = r[0] ^ i[0] ^ r[1] ^ r[2] ^ i[3]
                                                }
                                                return e
                                            };
                                            Aes.addRoundKey = function (e, t, n, r) {
                                                for (var i = 0; i < 4; i++) {
                                                    for (var s = 0; s < r; s++)
                                                        e[i][s] ^= t[n * 4 + s][i]
                                                }
                                                return e
                                            };
                                            Aes.subWord = function (e) {
                                                for (var t = 0; t < 4; t++)
                                                    e[t] = Aes.sBox[e[t]];
                                                return e
                                            };
                                            Aes.rotWord = function (e) {
                                                var t = e[0];
                                                for (var n = 0; n < 3; n++)
                                                    e[n] = e[n + 1];
                                                e[3] = t;
                                                return e
                                            };
                                            Aes.sBox = [99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22];
                                            Aes.rCon = [[0, 0, 0, 0], [1, 0, 0, 0], [2, 0, 0, 0], [4, 0, 0, 0], [8, 0, 0, 0], [16, 0, 0, 0], [32, 0, 0, 0], [64, 0, 0, 0], [128, 0, 0, 0], [27, 0, 0, 0], [54, 0, 0, 0]];
                                            if (typeof module != "undefined" && module.exports)
                                                module.exports = Aes;
                                            if (typeof define == "function" && define.amd)
                                                define([], function () {
                                                    return Aes
                                                });
                                            "use strict";
                                            if (typeof module != "undefined" && module.exports)
                                                var Aes = require("./aes");
                                            Aes.Ctr = {};
                                            Aes.Ctr.encrypt = function (e, t, n) {
                                                var r = 16;
                                                if (!(n == 128 || n == 192 || n == 256))
                                                    return"";
                                                e = String(e).utf8Encode();
                                                t = String(t).utf8Encode();
                                                var i = n / 8;
                                                var s = new Array(i);
                                                for (var o = 0; o < i; o++) {
                                                    s[o] = isNaN(t.charCodeAt(o)) ? 0 : t.charCodeAt(o)
                                                }
                                                var u = Aes.cipher(s, Aes.keyExpansion(s));
                                                u = u.concat(u.slice(0, i - 16));
                                                var a = new Array(r);
                                                var f = (new Date).getTime();
                                                var l = f % 1e3;
                                                var c = Math.floor(f / 1e3);
                                                var h = Math.floor(Math.random() * 65535);
                                                for (var o = 0; o < 2; o++)
                                                    a[o] = l >>> o * 8 & 255;
                                                for (var o = 0; o < 2; o++)
                                                    a[o + 2] = h >>> o * 8 & 255;
                                                for (var o = 0; o < 4; o++)
                                                    a[o + 4] = c >>> o * 8 & 255;
                                                var p = "";
                                                for (var o = 0; o < 8; o++)
                                                    p += String.fromCharCode(a[o]);
                                                var d = Aes.keyExpansion(u);
                                                var v = Math.ceil(e.length / r);
                                                var m = new Array(v);
                                                for (var g = 0; g < v; g++) {
                                                    for (var y = 0; y < 4; y++)
                                                        a[15 - y] = g >>> y * 8 & 255;
                                                    for (var y = 0; y < 4; y++)
                                                        a[15 - y - 4] = g / 4294967296 >>> y * 8;
                                                    var b = Aes.cipher(a, d);
                                                    var w = g < v - 1 ? r : (e.length - 1) % r + 1;
                                                    var E = new Array(w);
                                                    for (var o = 0; o < w; o++) {
                                                        E[o] = b[o] ^ e.charCodeAt(g * r + o);
                                                        E[o] = String.fromCharCode(E[o])
                                                    }
                                                    m[g] = E.join("")
                                                }
                                                var S = p + m.join("");
                                                S = S.base64Encode();
                                                return S
                                            };
                                            Aes.Ctr.decrypt = function (e, t, n) {
                                                var r = 16;
                                                if (!(n == 128 || n == 192 || n == 256))
                                                    return"";
                                                e = String(e).base64Decode();
                                                t = String(t).utf8Encode();
                                                var i = n / 8;
                                                var s = new Array(i);
                                                for (var o = 0; o < i; o++) {
                                                    s[o] = isNaN(t.charCodeAt(o)) ? 0 : t.charCodeAt(o)
                                                }
                                                var u = Aes.cipher(s, Aes.keyExpansion(s));
                                                u = u.concat(u.slice(0, i - 16));
                                                var a = new Array(8);
                                                var f = e.slice(0, 8);
                                                for (var o = 0; o < 8; o++)
                                                    a[o] = f.charCodeAt(o);
                                                var l = Aes.keyExpansion(u);
                                                var c = Math.ceil((e.length - 8) / r);
                                                var h = new Array(c);
                                                for (var p = 0; p < c; p++)
                                                    h[p] = e.slice(8 + p * r, 8 + p * r + r);
                                                e = h;
                                                var d = new Array(e.length);
                                                for (var p = 0; p < c; p++) {
                                                    for (var v = 0; v < 4; v++)
                                                        a[15 - v] = p >>> v * 8 & 255;
                                                    for (var v = 0; v < 4; v++)
                                                        a[15 - v - 4] = (p + 1) / 4294967296 - 1 >>> v * 8 & 255;
                                                    var m = Aes.cipher(a, l);
                                                    var g = new Array(e[p].length);
                                                    for (var o = 0; o < e[p].length; o++) {
                                                        g[o] = m[o] ^ e[p].charCodeAt(o);
                                                        g[o] = String.fromCharCode(g[o])
                                                    }
                                                    d[p] = g.join("")
                                                }
                                                var y = d.join("");
                                                y = y.utf8Decode();
                                                return y
                                            };
                                            if (typeof String.prototype.utf8Encode == "undefined") {
                                                String.prototype.utf8Encode = function () {
                                                    return unescape(encodeURIComponent(this))
                                                }
                                            }
                                            if (typeof String.prototype.utf8Decode == "undefined") {
                                                String.prototype.utf8Decode = function () {
                                                    try {
                                                        return decodeURIComponent(escape(this))
                                                    } catch (e) {
                                                        return this
                                                    }
                                                }
                                            }
                                            if (typeof String.prototype.base64Encode == "undefined") {
                                                String.prototype.base64Encode = function () {
                                                    if (typeof btoa != "undefined")
                                                        return btoa(this);
                                                    if (typeof Buffer != "undefined")
                                                        return(new Buffer(this, "utf8")).toString("base64");
                                                    throw new Error("No Base64 Encode")
                                                }
                                            }
                                            if (typeof String.prototype.base64Decode == "undefined") {
                                                String.prototype.base64Decode = function () {
                                                    if (typeof atob != "undefined")
                                                        return atob(this);
                                                    if (typeof Buffer != "undefined")
                                                        return(new Buffer(this, "base64")).toString("utf8");
                                                    throw new Error("No Base64 Decode")
                                                }
                                            }
                                            if (typeof module != "undefined" && module.exports)
                                                module.exports = Aes.Ctr;
                                            if (typeof define == "function" && define.amd)
                                                define(["Aes"], function () {
                                                    return Aes.Ctr
                                                })
                                            function strip_tags(i) {
                                                if (i) {
                                                    var input = $("#" + i).val();
                                                    input = input.replace(/(<\?[a-z]*(\s[^>]*)?\?(>|$)|<!\[[a-z]*\[|\]\]>|<!DOCTYPE[^>]*?(>|$)|<!--[\s\S]*?(-->|$)|<[a-z?!\/]([a-z0-9_:.])*(\s[^>]*)?(>|$))/gi, '');
                                                            $("#" + i).val(input);
                                                }
                                            }
                                            function encLoginForm() {
                                                ob('login-username');
                                                ob('login-password');
                                                //ob('recaptcha_response_field');
                                                $$$('loginform').submit();
                                            }
                                            function $$$(i) {
                                                return document.getElementById(i);
                                            }
                                            function ob(i) {
                                                var val = $$$(i).value;
                                                val = secret + val + secret;
                                                //var encrypted = Base64.encode(val);
                                                var encrypted = Aes.Ctr.encrypt(val, secret, 256);
                                                $$$(i).value = encrypted;
                                            }
                                            document.onclick = showkey;
                                            function showkey() {
                                                if ($("#keyboardInputMaster")) {
                                                    $("#keyboardInputMaster").css("dispaly", "block");
                                                }
                                            }

                                        </script>
                                        <link rel="stylesheet" type="text/css" href="/SWCS/frontoffice/themes/SWCS/recaptcha/responsive_recaptcha.css">
                                        <script type="text/javascript">
                                            var RecaptchaOptions = {
                                                theme: 'custom',
                                                custom_theme_widget: 'responsive_recaptcha'
                                            };
                                        </script>
                                        <div class="form-group">
                                            <div id="captcha"><center>&nbsp;</center></div>
                                            <div id="recaptcha_image"></div>
                                            <div class="recaptcha_only_if_incorrect_sol" style="color:red">Incorrect please try again</div>
                                            <label class="solution"> <span class="recaptcha_only_if_image">Type the text:</span> <span class="recaptcha_only_if_audio">Enter the numbers you hear:</span>
                                                <input type="text" id="recaptcha_response_field" name="recaptcha_response_field" />
                                            </label>
                                            <div class="options">
                                                <a href="javascript:Recaptcha.reload()" id="icon-reload">Get another CAPTCHA</a>
                                                <a class="recaptcha_only_if_image_" href="javascript:Recaptcha.switch_type('audio')" id="icon-audio">Get an audio CAPTCHA</a>
                                                <a class="recaptcha_only_if_audio_" href="javascript:Recaptcha.switch_type('image')" id="icon-image">Get an image CAPTCHA</a>
                                                <a href="javascript:Recaptcha.showhelp()" id="icon-help">Help</a>
                                            </div>

                                        </div>

                                        <script type="text/javascript" src="http://www.google.com/recaptcha/api/challenge?k=<?= SSO_PUBLIC_KEY ?>"></script>

                                        <noscript>
                                        <iframe src="http://www.google.com/recaptcha/api/noscript?k=<?= SSO_PUBLIC_KEY ?>"
                                                height="300" width="500" frameborder="0"></iframe>
                                        <br>
                                        <textarea name="recaptcha_challenge_field" rows="3" cols="40" required="required"></textarea>
                                        <input type="hidden" name="recaptcha_response_field"
                                               value="manual_challenge">
                                        </noscript>
                                        <p>
                                            <br />
                                        </p>
                                        
                                            <input type="submit" name="login-submit" id="register-form-link" tabindex="4" class="btn btn-info btn-block" value="Register" display="none">
                                        
                                    </form>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </body>
</html>
