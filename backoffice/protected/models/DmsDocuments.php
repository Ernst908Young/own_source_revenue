<?php/** * This is the model class for table "cdn_dms_documents". * * The followings are the available columns in table 'cdn_dms_documents': * @property string $documents_id * @property integer $docchk_id * @property integer $doc_type_id * @property integer $issuer_id * @property integer $issued_by_id * @property string $iuid * @property string $user_id * @property string $doc_ref_number * @property string $document_name * @property string $document_version_type * @property string $document_version * @property string $doc_status * @property string $is_document_active * @property string $created_on * @property string $last_updated * @property string $is_uploaded * * The followings are the available model relations: * @property ApplicationDmsDocumentsMapping[] $applicationDmsDocumentsMappings * @property ApplicationDmsDocumentsMappingLogs[] $applicationDmsDocumentsMappingLogs */class DmsDocuments extends CActiveRecord{	/**	 * @return string the associated database table name	 */	public function tableName()	{		return 'cdn_dms_documents';	}	/**	 * @return array validation rules for model attributes.	 */	public function rules()	{		// NOTE: you should only define rules for those attributes that		// will receive user inputs.		return array(			array('docchk_id, doc_type_id, issuer_id, issued_by_id, iuid, user_id, doc_ref_number, document_name, document_version, created_on', 'required'),			array('docchk_id, doc_type_id, issuer_id, issued_by_id, sno', 'numerical', 'integerOnly'=>true),			array('iuid', 'length', 'max'=>8),			array('user_id, document_version', 'length', 'max'=>10),			array('doc_ref_number', 'length', 'max'=>100),			array('document_reference_number', 'length', 'max'=>100),			array('document_name', 'length', 'max'=>255),			array('comments', 'length', 'max'=>255),			array('document_version_type, doc_status, is_document_active, is_uploaded', 'length', 'max'=>1),			array(' last_updated , doc_date_of_issuance', 'safe'),			// The following rule is used by search().			// @todo Please remove those attributes that should not be searched.			array('documents_id, docchk_id, doc_type_id, issuer_id, issued_by_id, iuid, user_id, doc_date_of_issuance , doc_ref_number, document_name, document_version_type, document_version, doc_status, is_document_active, created_on,valid_to,valid_from, last_updated, is_uploaded', 'safe', 'on'=>'search'),		);	}	/**	 * @return array relational rules.	 */	public function relations()	{		// NOTE: you may need to adjust the relation name and the related		// class name for the relations automatically generated below.		return array(			'applicationDmsDocumentsMappings' => array(self::HAS_MANY, 'ApplicationDmsDocumentsMapping', 'documents_id'),			'applicationDmsDocumentsMappingLogs' => array(self::HAS_MANY, 'ApplicationDmsDocumentsMappingLogs', 'documents_id'),		);	}	/**	 * @return array customized attribute labels (name=>label)	 */	public function attributeLabels()	{		return array(			'documents_id' => 'Documents',			'docchk_id' => 'Docchk',			'doc_type_id' => 'Doc Type',			'issuer_id' => 'Issuer',			'issued_by_id' => 'Issued By',			'iuid' => 'Iuid',			'user_id' => 'User',			'doc_ref_number' => 'Doc Ref Number',			'document_name' => 'Document Name',			'document_version_type' => 'Document Version Type',			'document_version' => 'Document Version',			'doc_status' => 'Doc Status',			'is_document_active' => 'Is Document Active',			'created_on' => 'Created On',			'last_updated' => 'Last Updated',			'is_uploaded' => 'Is Uploaded',		);	}	/**	 * Retrieves a list of models based on the current search/filter conditions.	 *	 * Typical usecase:	 * - Initialize the model fields with values from filter form.	 * - Execute this method to get CActiveDataProvider instance which will filter	 * models according to data in model fields.	 * - Pass data provider to CGridView, CListView or any similar widget.	 *	 * @return CActiveDataProvider the data provider that can return the models	 * based on the search/filter conditions.	 */	public function search()	{		// @todo Please modify the following code to remove attributes that should not be searched.		$criteria=new CDbCriteria;		$criteria->compare('documents_id',$this->documents_id,true);		$criteria->compare('docchk_id',$this->docchk_id);		$criteria->compare('doc_type_id',$this->doc_type_id);		$criteria->compare('issuer_id',$this->issuer_id);		$criteria->compare('issued_by_id',$this->issued_by_id);		$criteria->compare('iuid',$this->iuid,true);		$criteria->compare('user_id',$this->user_id,true);		$criteria->compare('doc_ref_number',$this->doc_ref_number,true);		$criteria->compare('document_name',$this->document_name,true);		$criteria->compare('document_version_type',$this->document_version_type,true);		$criteria->compare('document_version',$this->document_version,true);		$criteria->compare('doc_status',$this->doc_status,true);		$criteria->compare('is_document_active',$this->is_document_active,true);		$criteria->compare('created_on',$this->created_on,true);		$criteria->compare('last_updated',$this->last_updated,true);		$criteria->compare('is_uploaded',$this->is_uploaded,true);		return new CActiveDataProvider($this, array(			'criteria'=>$criteria,		));	}	/**	 * Returns the static model of the specified AR class.	 * Please note that you should have this exact method in all your CActiveRecord descendants!	 * @param string $className active record class name.	 * @return DmsDocuments the static model class	 */	public static function model($className=__CLASS__)	{		return parent::model($className);	}}