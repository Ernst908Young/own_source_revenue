<?phpclass InfowizardDocumentchklistController extends Controller {    /**     * This function is used to get the Document CheckList Master     * @Author: Neha Jaiswal     */    public $layout = '//layouts/column2';    /**     * @return array action filters     */    public function filters() {        return array(            'accessControl', // perform access control for CRUD operations            'postOnly + delete', // we only allow deletion via POST request        );    }    /**     * Specifies the access control rules.     * This method is used by the 'accessControl' filter.     * @return array access control rules     */    public function accessRules() {        return array(            array('allow', // allow admin user to perform 'admin' and 'delete' actions                'actions' => array('create', 'update', 'view', 'viewpage', 'issuermappingall', 'index'),                'expression' => 'RolesExt::isAdminUser()',            ),            array('allow', // allow admin user to perform 'admin' and 'delete' actions                'actions' => array('create', 'update', 'view', 'viewpage', 'issuermappingall', 'index'),                'expression' => 'DefaultUtility::isInfoWizardAdmin()',            ),            array('deny', // deny all users                'users' => array('*'),            ),        );    }    /**     * Displays a particular model.     * @param integer $id the ID of the model to be displayed     */    public function actionViewpage() {        $this->render("viewpage");    }    public function actionIndex() {        $applications = InfowizardQuestionMasterExt::getIWListDocChk();        $this->render("index", array("apps" => $applications));    }    public function actionView($id) {        $this->render('view', array(            'model' => $this->loadModel($id),        ));    }    public function actionIssuermappingall() { //print_r('hi'); print_r($_POST['post_issuerid']); die;        if ($_POST['post_issuerid']) {            $issID = $_POST['post_issuerid'];            //$sql="SELECT m.issmap_id,m.issuer_id,i.issuerby_id,i.name FROM bo_infowizard_issuer_mapping m,bo_infowizard_issuerby_master i WHERE m.issuer_id=:issID and             //i.issuerby_id = m.issuerby_id and is_issmap_active='Y'";            $sql = "SELECT m.issmap_id as issmap_id,i.name as name FROM bo_infowizard_issuer_mapping m,bo_infowizard_issuerby_master i WHERE m.issuer_id=:issID and 		i.issuerby_id = m.issuerby_id and is_issmap_active='Y' order by name ASC";            //print_r($sql);die;            $connection = Yii::app()->db;            $command = $connection->createCommand($sql);            $command->bindParam(":issID", $issID, PDO::PARAM_STR);            $services = $command->queryAll();            $services1[] = array('issmap_id' => '', 'name' => '<---- Select ---->');            foreach ($services as $key => $val) {                $services1[] = $val;            }            echo json_encode($services1);        }        //print_r($services);    }    private function getIssuerMappingOne($issMap) { //print_r($issMap); //print_r($_POST['post_issuerid']);        //die;        $sql = "SELECT issuerby_id FROM bo_infowizard_issuer_mapping  WHERE issmap_id=:issMap and is_issmap_active='Y'";        $connection = Yii::app()->db;        $command = $connection->createCommand($sql);        $command->bindParam(":issMap", $issMap, PDO::PARAM_STR);        $mapp = $command->queryRow();        return $mapp;        //echo json_encode($mapp);        //print_r($services);    }    /**     * Creates a new model.     * If creation is successful, the browser will be redirected to the 'view' page.     */    private function getIssuerMappingdata($issuer, $issuerby) {        $sql = "SELECT * FROM bo_infowizard_issuer_mapping  WHERE issuer_id=:issuer and issuerby_id=:issuerby and is_issmap_active='Y'";        $connection = Yii::app()->db;        $command = $connection->createCommand($sql);        $command->bindParam(":issuer", $issuer, PDO::PARAM_STR);        $command->bindParam(":issuerby", $issuerby, PDO::PARAM_STR);        $mapp = $command->queryRow();        //print_r($mapp); die;        if (isset($mapp)) {            if ($mapp == false)                return false;            //print_r($mapp['issmap_id']); die;            return $mapp['issmap_id'];        }    }    public function actionCreate() {        $model = new InfowizardDocumentchklist;        if (!empty($_POST)) {            $model->attributes = $_POST;            $model->created_date = date('Y-m-d H:m:s');            $Docdata_id = implode(",", $_POST['doc_id']);            $model->doc_id = $Docdata_id;            $issmapid = $this->getIssuerMappingdata($_POST['issuer_id'], $_POST['issuerby_id']);            $model->issmap_id = $issmapid;            //print_r($model->attributes);die;            $sqlbv = "select * from bo_infowizard_documentchklist where name=:name111 and issmap_id=:issmap_id111";            $connection = Yii::app()->db;            $command = $connection->createCommand($sqlbv);            $command->bindParam(":name111", $_POST['name'], PDO::PARAM_INT);            $command->bindParam(":issmap_id111", $issmapid, PDO::PARAM_INT);            $Fieldsaadssd = $command->queryAll();            // print_r($Fieldsaadssd);            $aaaa = count($Fieldsaadssd);            //die;            if ($aaaa == 0) {                if ($model->save()) {                    Yii::app()->user->setFlash('Success', "Document Master data has been saved");                    $this->redirect(array('view', 'id' => $model->docchk_id));                }            } else {                Yii::app()->user->setFlash('Failure', "Data Already Exist");            }        }        $Document1[] = array('doc_id' => '', 'name' => '--Select Document Type--');        $Document = InfowizardQuestionMasterExt::getDocumentForInfoWizard();        foreach ($Document as $key => $val) {            $Document1[] = $val;        }        $Issuer1[] = array('issuer_id' => '', 'name' => '--Select Issuer--');        $Issuer = InfowizardQuestionMasterExt::getIssuerForInfoWizard();        foreach ($Issuer as $key => $val) {            $Issuer1[] = $val;        }        $connection = Yii::app()->db;        $isactive = 'Y';        $sql = "SELECT docchk_id FROM bo_infowizard_documentchklist where docchk_id>0 order by docchk_id DESC limit 1";        $command = $connection->createCommand($sql);        //$command->bindParam(":isactive",$isactive,PDO::PARAM_INT);        $findList = $command->queryAll();        $count = 0;        if (isset($findList[0])) {            $count = $findList[0]['docchk_id'];        }        //print_r($NoRow);  print_r($count); die;        $this->render('create', array(            'model' => $model,            'Documentdata' => $Document1,            'Issuerdata' => $Issuer1,            'countid' => $count,        ));    }    /**     * Updates a particular model.     * If update is successful, the browser will be redirected to the 'view' page.     * @param integer $id the ID of the model to be updated     */    public function actionUpdate($id) {        $model = $this->loadModel($id);        //echo '<pre>'; print_r($model); die;        if (!empty($_POST)) {   //print_r($_POST);            $model->attributes = $_POST;            $model->created_date = date('Y-m-d H:m:s');            $issmapid = $this->getIssuerMappingdata($_POST['issuer_id'], $_POST['issuerby_id']);            $model->issmap_id = $issmapid;            $Docdata_id = implode(",", $_POST['doc_id']);            $model->doc_id = $Docdata_id;            //print_r($model->attributes); die;            $sqlbv = "select * from  bo_infowizard_documentchklist where name=:name111 and issmap_id=:issmap_id111 and docchk_id!=:docchk_id111";            $connection = Yii::app()->db;            $command = $connection->createCommand($sqlbv);            $command->bindParam(":name111", $_POST['name'], PDO::PARAM_INT);            $command->bindParam(":issmap_id111", $issmapid, PDO::PARAM_INT);            $command->bindParam(":docchk_id111", $id, PDO::PARAM_INT);            $Fieldsaadssd = $command->queryAll();            //  print_r($Fieldsaadssd);            $aaaa = count($Fieldsaadssd);            //  die;            if ($aaaa == 0) {  //print_r($model->attributes);die;                if ($model->save()) {                    Yii::app()->user->setFlash('Success', "Document Master data has been saved");                    $this->redirect(array('view', 'id' => $id));                }            } else {                Yii::app()->user->setFlash('Failure', "Data Already Exist");            }        }        $Issuer = InfowizardQuestionMasterExt::getIssuerForInfoWizard();        foreach ($Issuer as $key => $val) {            $Issuer1[] = $val;        }        $this->render('update', array(            'model' => $model,            'Issuerdata' => $Issuer1,        ));    }    /**     * Deletes a particular model.     * If deletion is successful, the browser will be redirected to the 'admin' page.     * @param integer $id the ID of the model to be deleted     */    public function actionDelete($id) {        $this->loadModel($id)->delete();        // if AJAX request (triggered by deletion via admin grid view), we should not redirect the browser        if (!isset($_GET['ajax']))            $this->redirect(isset($_POST['returnUrl']) ? $_POST['returnUrl'] : array('admin'));    }    /**     * Lists all models.     */    /**     * Returns the data model based on the primary key given in the GET variable.     * If the data model is not found, an HTTP exception will be raised.     * @param integer $id the ID of the model to be loaded     * @return InfowizardDocumentchklist the loaded model     * @throws CHttpException     */    public function loadModel($id) {        $model = InfowizardDocumentchklist::model()->findByPk($id);        if ($model === null)            throw new CHttpException(404, 'The requested page does not exist.');        return $model;    }    /**     * Performs the AJAX validation.     * @param InfowizardDocumentchklist $model the model to be validated     */    protected function performAjaxValidation($model) {        if (isset($_POST['ajax']) && $_POST['ajax'] === 'infowizard-documentchklist-form') {            echo CActiveForm::validate($model);            Yii::app()->end();        }    }}